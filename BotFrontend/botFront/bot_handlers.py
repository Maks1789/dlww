from aiogram import types
from .app import dp
from .bot_messages import *
from .keyboards import inline_kb_cat, sens_button, inline_start_cat
from aiogram.dispatcher import FSMContext


@dp.message_handler(commands=['start'], state="*")
async def echo(message: types.Message, state: FSMContext):
    await state.finish()
    await message.reply(WelcomeMessage,  reply_markup=inline_start_cat)

@dp.callback_query_handler(text="Artikel")
async def art_messagt(call: types.CallbackQuery):
    await call.message.answer("–û–±–µ—Ä–∏ —Ç–µ–º—É\W√§hl das Thema ü§ñ",  reply_markup=inline_kb_cat)


@dp.callback_query_handler(text="Verben")
async def verb_messagt(call: types.CallbackQuery):
    await call.message.answer("–û–±–µ—Ä–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—É –≤—ñ–¥–ø–æ–≤—ñ–¥—åüßô‚Äç‚ôÇÔ∏è",  reply_markup=sens_button)





@dp.message_handler(commands=['cancel'], state="*")
async def echo(message: types.Message, state: FSMContext):
    await state.finish()
    await message.reply(GoodbyMessage)



@dp.callback_query_handler(text="repeat")
async def repeat_messagt(call: types.CallbackQuery):
    await call.message.answer(RepeatMessage,  reply_markup=inline_kb_cat)




"–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤ –∑ –≤—ñ–¥–ø–æ–≤—ñ–¥—è–º–∏"
@dp.message_handler(commands=['sent'])
async def start_sent(message: types.Message):
    await message.reply("–£ —Ü—å–æ–º—É –∑–∞–≤–¥–∞–Ω–Ω—ñ —Ç–æ–±—ñ –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤–∏–±—Ä–∞—Ç–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—É —Ñ–æ—Ä–º—É –¥—ñ—î—Å–ª—ñ–≤", reply_markup=sens_button)


